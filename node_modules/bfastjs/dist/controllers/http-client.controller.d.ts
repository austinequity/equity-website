import { HttpClientAdapter, RestRequestConfig, RestResponse } from "../adapters/http-client.adapter";
import { HttpRequestInfoModel } from "../models/http-request-info.model";
export declare class HttpClientController {
    private readonly appName;
    private readonly httpClientAdapter;
    constructor(appName: string, httpClientAdapter: HttpClientAdapter);
    addTokenToHeaders(config: RestRequestConfig, token: string | null): Promise<RestRequestConfig>;
    delete<T = any, R = RestResponse<T>>(url: string, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
    get<T = any, R = RestResponse<T>>(url: string, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
    head<T = any, R = RestResponse<T>>(url: string, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
    options<T = any, R = RestResponse<T>>(url: string, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
    patch<T = any, R = RestResponse<T>>(url: string, data: any, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
    post<T = any, R = RestResponse<T>>(url: string, data: any, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
    put<T = any, R = RestResponse<T>>(url: string, data: any, config: RestRequestConfig, requestInfoModel: HttpRequestInfoModel): Promise<R>;
}
