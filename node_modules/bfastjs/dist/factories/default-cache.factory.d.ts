import { CacheAdapter } from "../adapters/cache.adapter";
import { RequestOptions } from "../controllers/query.controller";
export declare class DefaultCacheFactory implements CacheAdapter {
    constructor();
    getAll(database: string, collection: string): Promise<any[]>;
    private static _getCacheDatabase;
    keys(database: string, collection: string): Promise<string[] | undefined>;
    clearAll(database: string, collection: string): Promise<boolean>;
    get<T extends any>(identifier: string, database: string, collection: string, options?: {
        secure?: boolean;
    }): Promise<T>;
    set<T>(identifier: string, data: T, database: string, collection: string, options?: {
        dtl?: number;
        secure?: boolean;
    }): Promise<T>;
    remove(identifier: string, database: string, collection: string, force?: boolean): Promise<boolean>;
    cacheEnabled(appName: string, options?: RequestOptions): boolean;
}
